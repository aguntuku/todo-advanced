buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:0.6'
    }
}

apply plugin: org.gradle.api.plugins.cargo.CargoPlugin

configurations {
	tomcatAnt
}

dependencies {
    def cargoVersion = '1.3.3'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
          "org.codehaus.cargo:cargo-ant:$cargoVersion"
    tomcatAnt 'org.apache.tomcat:tomcat-catalina-ant:7.0.39'
}

ext.appContextStatus = {
	String serverUrl = "http://${config.server.hostname}:${config.server.port}/manager/text"
	ant.taskdef(name: 'list', classname: 'org.apache.catalina.ant.ListTask', classpath: configurations.tomcatAnt.asPath)
	
	try {		
		ant.list(url: serverUrl, username: config.server.username, password: config.server.password, outputproperty: 'appContextStatus')
		String appContextStatus = ant.properties.appContextStatus
		return appContextStatus.contains("/${config.server.context}:running") || appContextStatus.contains("/${config.server.context}:stopped")
	}
	catch(Exception e) {
		logger.error "Failed to connect to '$serverUrl': $e.message"
		return false
	}
}

cargoUndeployRemote {
	onlyIf appContextStatus
}