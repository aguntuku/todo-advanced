project(':web') {
    apply plugin: 'war'
    apply plugin: 'jetty'
	apply from: "$rootDir/gradle/publishMaven.gradle"
	apply from: "$rootDir/gradle/deployCargo.gradle"
	apply from: "$rootDir/gradle/functionalTest.gradle"

    dependencies {
	    compile project(':repository')
	    providedCompile 'javax.servlet:servlet-api:2.5'
	    runtime 'javax.servlet:jstl:1.1.2'
		runtime 'taglibs:standard:1.1.2'
    }

	task createBuildInfoFile << {
		def buildInfoFile = new File("$buildDir/build-info.properties")
		Properties props = new Properties()
		props.setProperty('version', project.version.toString())
		props.setProperty('timestamp', buildTimestamp)
		props.store(buildInfoFile.newWriter(), null)
	}
	
	war {
		dependsOn createBuildInfoFile
	   	baseName = 'todo'
	
		from(buildDir) {
			include 'build-info.properties'
		    into('WEB-INF/classes')
		}
	}
	
	ext.downloadedArtifact = file("$buildDir/download/$war.archiveName") 
	
	task downloadBinaryArchive(type: com.manning.gia.BinaryDownload) {
		ext {
			repoPath = project.group.replaceAll('\\.', '/')
			repoBaseArtifactName = war.baseName
			repoVersion = project.version.toString()
			repoArtifact = war.archiveName
			binaryUrl = "$artifactoryContextUrl/simple/$artifactoryRepository/$repoPath/$repoBaseArtifactName/$repoVersion/$repoArtifact"
		}

		sourceUrl = binaryUrl
		targetBinary = downloadedArtifact
	}
	
	cargoDeployRemote.dependsOn downloadBinaryArchive, cargoUndeployRemote
	
	ext.envTestHostname = 'localhost'
	ext.envTestUsername = 'manager'
	ext.envTestPassword = 'manager'

	cargo {
	    containerId = 'tomcat7x'
		port = 8099

	    deployable {
		    file = downloadedArtifact
	        context = 'todo'
	    }

	    remote {
	        hostname = envTestHostname
	        username = envTestUsername
	        password = envTestPassword
	    }
	}
}